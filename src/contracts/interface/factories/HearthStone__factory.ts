/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HearthStone, HearthStoneInterface } from "../HearthStone";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IShuffleStateManager",
        name: "_shuffle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerIdx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cardIdx",
        type: "uint256",
      },
    ],
    name: "ChooseCard",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shuffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "CreateGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerIdx",
        type: "uint256",
      },
    ],
    name: "EndGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shuffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "joiner",
        type: "address",
      },
    ],
    name: "JoinGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerIdx",
        type: "uint256",
      },
    ],
    name: "NextPlayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerIdx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cardIdx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cardValue",
        type: "uint256",
      },
    ],
    name: "OpenCard",
    type: "event",
  },
  {
    inputs: [],
    name: "INVALID_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cardConfig",
    outputs: [
      {
        internalType: "enum DeckConfig",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cardIdx",
        type: "uint256",
      },
    ],
    name: "chooseCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pkX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pkY",
        type: "uint256",
      },
    ],
    name: "createShuffleForCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pkX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pkY",
        type: "uint256",
      },
    ],
    name: "createShuffleForJoiner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shuffleId",
        type: "uint256",
      },
    ],
    name: "dealCardsToPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address[2]",
            name: "players",
            type: "address[2]",
          },
          {
            internalType: "uint256[2]",
            name: "health",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2]",
            name: "shield",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2]",
            name: "shuffleIds",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "curPlayerIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pkX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pkY",
            type: "uint256",
          },
        ],
        internalType: "struct Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "largestHSId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
    ],
    name: "moveToChooseStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shuffleId",
        type: "uint256",
      },
    ],
    name: "moveToShuffleStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hsId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cardIdx",
        type: "uint256",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shuffle",
    outputs: [
      {
        internalType: "contract IShuffleStateManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161190038038061190083398101604081905261002f91610059565b600080546001600160a01b0319166001600160a01b03929092169190911790556064600155610087565b60006020828403121561006a578081fd5b81516001600160a01b0381168114610080578182fd5b9392505050565b61186a806100966000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806347e1d5501161007157806347e1d5501461014a57806351a07a7d1461016a578063574cdded1461017d57806395b97f5c146101905780639af05fed146101a3578063fc7d6667146101b657600080fd5b806309a9851d146100b95780631ff13b6f146100ce5780632520bf04146100e157806325c48db01461011157806337cf53311461012857806342506c4714610137575b600080fd5b6100cc6100c7366004611589565b6101c0565b005b6100cc6100dc366004611568565b6103c6565b6000546100f4906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011a60015481565b604051908152602001610108565b60016040516101089190611622565b6100cc610145366004611589565b610661565b61015d610158366004611538565b610a80565b6040516101089190611681565b6100cc610178366004611568565b610ba5565b6100cc61018b366004611589565b610c75565b6100cc61019e366004611538565b610ec3565b6100cc6101b1366004611568565b610f45565b61011a620f423f81565b600083815260026020819052604090912090839081106101f057634e487b7160e01b600052603260045260246000fd5b01546001600160a01b031633146102455760405162461bcd60e51b81526020600482015260146024820152730d2dcecc2d8d2c840e0d8c2f2cae440d2dcc8caf60631b60448201526064015b60405180910390fd5b60008381526002602052604090206008015482146102985760405162461bcd60e51b815260206004820152601060248201526f3737ba1034b7103cb7bab9103a3ab93760811b604482015260640161023c565b60408051602481018590526044810184905260648082018490528251808303909101815260849091018252602080820180516001600160e01b031663574cdded60e01b1790526000805487825260029283905293902091926001600160a01b03169163b608151e916006909101908690811061032457634e487b7160e01b600052603260045260246000fd5b015460006001856040518563ffffffff1660e01b815260040161034a949392919061175c565b600060405180830381600087803b15801561036457600080fd5b505af1158015610378573d6000803e3d6000fd5b505060408051338152602081018790529081018590528692507fb717821f236b2f06d37ae90addc550b7b4a4403dca8d2d6f52b5ebb858bc551891506060015b60405180910390a250505050565b6001600081546103d590611803565b9091555060018054600090815260026020819052604080832080546001600160a01b0319163317905592548252828220601e9082015590549151635a3b27ab60e11b815260048101919091526001600160a01b03919091169063b4764f5690602401602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190611550565b6001805460009081526002602081815260408084206006908101969096558454845280842060090188905584548452808420600a018790559354808452848420909501548451602481018790526044808201839052865180830390910181526064909101865280830180516001600160e01b03166351a07a7d60e01b179052845496909452919052915163765718d760e01b815290926001600160a01b03169163765718d79161053e9190859060040161173b565b600060405180830381600087803b15801561055857600080fd5b505af115801561056c573d6000803e3d6000fd5b50506000805460015482526002602052604091829020600601549151632e14c1d560e21b81526001600160a01b03909116935063b853075492506105b99190339088908890600401611717565b602060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190611550565b5060015460008181526002602052604081207f16dca524ff25a377d2e6cecca0f661869e5237f50a4de1699a507346bc5184ea9160069091010154604080519182523360208301520160405180910390a2505050565b6000838152600260205260409020546001600160a01b03161580159061069f57506000838152600260205260408120600101546001600160a01b0316145b6106db5760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081adcc81a59609a1b604482015260640161023c565b60008381526002602081905260408083206001810180546001600160a01b03191633179055601e6003820155600a60059091015591549151635a3b27ab60e11b815260048101919091526001600160a01b03919091169063b4764f5690602401602060405180830381600087803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d9190611550565b60008481526002602081815260408084206007018590558051602481018990526044808201879052825180830390910181526064909101825280830180516001600160e01b03166351a07a7d60e01b179052845494899052929091525163765718d760e01b815290926001600160a01b039092169163765718d7916108179190859060040161173b565b600060405180830381600087803b15801561083157600080fd5b505af1158015610845573d6000803e3d6000fd5b5050600080548782526002602052604091829020600601549151632e14c1d560e21b81526001600160a01b03909116935063b853075492506108909190339088908890600401611717565b602060405180830381600087803b1580156108aa57600080fd5b505af11580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e29190611550565b50600080548582526002602052604091829020600701549151632e14c1d560e21b81526001600160a01b039091169163b85307549161092a9190339088908890600401611717565b602060405180830381600087803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190611550565b50600080548582526002602052604091829020600781015481546009830154600a909301549451632e14c1d560e21b81526001600160a01b039485169563b8530754956109cf9593169291600401611717565b602060405180830381600087803b1580156109e957600080fd5b505af11580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a219190611550565b50600084815260026020526040812060098101829055600a81019190915560018054917f6381813fbaf8e97409adf6e29a2058b85bbd2b336a3449ef16b01d1c64dfa84a916006909101015460408051918252336020830152016103b8565b610a886114c5565b6000828152600260208190526040918290208251610120810193849052929091839160e0830191849182845b81546001600160a01b03168152600190910190602001808311610ab457505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610af4575050509183525050604080518082019182905260209092019190600484019060029082845b815481526020019060010190808311610b2c575050509183525050604080518082019182905260209092019190600684019060029082845b815481526020019060010190808311610b6457505050505081526020016008820154815260200160098201548152602001600a820154815250509050919050565b6000546001600160a01b03163314610bcf5760405162461bcd60e51b815260040161023c9061164a565b6040805160248101849052604480820184905282518083039091018152606490910182526020810180516001600160e01b0316639af05fed60e01b179052600054915163f3c7e26d60e01b815290916001600160a01b03169063f3c7e26d90610c3e908590859060040161173b565b600060405180830381600087803b158015610c5857600080fd5b505af1158015610c6c573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610c9f5760405162461bcd60e51b815260040161023c9061164a565b6000805484825260026020819052604083206001600160a01b039092169163261fe4ca9160069091019086908110610ce757634e487b7160e01b600052603260045260246000fd5b0154846040518363ffffffff1660e01b8152600401610d10929190918252602082015260400190565b60206040518083038186803b158015610d2857600080fd5b505afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190611550565b905060008054906101000a90046001600160a01b03166001600160a01b031663fc7d66676040518163ffffffff1660e01b815260040160206040518083038186803b158015610dae57600080fd5b505afa158015610dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de69190611550565b811415610e2a5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420636172642076616c756560701b604482015260640161023c565b837ff5621f375d46a339561169bc5dfc577f25a5a9b224e2f848935a1353ecf03677600260008781526020019081526020016000206000018560028110610e8157634e487b7160e01b600052603260045260246000fd5b0154604080516001600160a01b0390921682526020820187905281018590526060810184905260800160405180910390a2610ebd848483611023565b50505050565b6000546001600160a01b03163314610eed5760405162461bcd60e51b815260040161023c9061164a565b600081815260026020526040812082917fb739a060405243a67b6cdad444e1b2570a0c7bc00ff19d2c7099f441854ad912910154604080516001600160a01b039092168252600060208301520160405180910390a250565b6000546001600160a01b03163314610f6f5760405162461bcd60e51b815260040161023c9061164a565b60408051602080820183526103ff825282516024808201879052845180830390910181526044909101845290810180516001600160e01b031663256e5fd760e21b1790526000805493516318e82a2b60e11b8152929391926001600160a01b03909216916331d0545691610feb9187918791879060040161178e565b600060405180830381600087803b15801561100557600080fd5b505af1158015611019573d6000803e3d6000fd5b5050505050505050565b600061102e82611461565b9050806020015160026000868152602001908152602001600020600401846002811061106a57634e487b7160e01b600052603260045260246000fd5b01558051600085815260026020526040902060040161108a8560016117ec565b600281106110a857634e487b7160e01b600052603260045260246000fd5b01546000868152600260208190526040909120016110c78660016117ec565b600281106110e557634e487b7160e01b600052603260045260246000fd5b01546110f191906117b4565b111561134757805160008581526002602052604090206004016111158560016117ec565b6002811061113357634e487b7160e01b600052603260045260246000fd5b01541061119157805160008581526002602052604090206004016111588560016117ec565b6002811061117657634e487b7160e01b600052603260045260246000fd5b01600082825461118691906117ec565b909155506112669050565b60008481526002602052604090206004016111ad8460016117ec565b600281106111cb57634e487b7160e01b600052603260045260246000fd5b015481516111d991906117ec565b6000858152600260208190526040909120016111f68560016117ec565b6002811061121457634e487b7160e01b600052603260045260246000fd5b01600082825461122491906117ec565b909155505060008481526002602052604081206004016112458560016117ec565b6002811061126357634e487b7160e01b600052603260045260246000fd5b01555b600084815260026020526040812060080180549161128383611803565b909155505060008481526002602081905260409091206008015414156112b6576000848152600260205260408120600801555b6000848152600260208190526040909120600881015486927fb739a060405243a67b6cdad444e1b2570a0c7bc00ff19d2c7099f441854ad912929190811061130e57634e487b7160e01b600052603260045260246000fd5b01546000878152600260209081526040918290206008015482516001600160a01b039094168452908301520160405180910390a2610ebd565b60008481526002602081905260408220016113638560016117ec565b6002811061138157634e487b7160e01b600052603260045260246000fd5b0155600084815260026020819052604090912085917fd4775d747509ff43f3176c54e6b58580a996a608cd7b59156d6dd4dd8631f2bb9190869081106113d757634e487b7160e01b600052603260045260246000fd5b0154604080516001600160a01b039092168252602082018790520160405180910390a2600080548582526002602081905260409092206001600160a01b039091169163d0399bb891600601908690811061144157634e487b7160e01b600052603260045260246000fd5b01546040518263ffffffff1660e01b8152600401610feb91815260200190565b60408051808201909152600080825260208201526000611482600a846117cc565b9050806114955760108252600560208301525b80600114156114aa57600b8252600a60208301525b80600214156114bf5760038252601260208301525b50919050565b6040518060e001604052806114d861151a565b81526020016114e561151a565b81526020016114f261151a565b81526020016114ff61151a565b81526020016000815260200160008152602001600081525090565b60405180604001604052806002906020820280368337509192915050565b600060208284031215611549578081fd5b5035919050565b600060208284031215611561578081fd5b5051919050565b6000806040838503121561157a578081fd5b50508035926020909101359150565b60008060006060848603121561159d578081fd5b505081359360208301359350604090920135919050565b8060005b6002811015610ebd5781518452602093840193909101906001016115b8565b60008151808452815b818110156115fc576020818501810151868301820152016115e0565b8181111561160d5782602083870101525b50601f01601f19169290920160200192915050565b602081016003831061164457634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601e908201527f43616c6c6572206973206e6f742073687566666c65206d616e616765722e0000604082015260600190565b81516101608201908260005b60028110156116b55782516001600160a01b031682526020928301929091019060010161168d565b50505060208301516116ca60408401826115b4565b5060408301516116dd60808401826115b4565b5060608301516116f060c08401826115b4565b50608083015161010083015260a083015161012083015260c0909201516101409091015290565b9384526001600160a01b039290921660208401526040830152606082015260800190565b82815260406020820152600061175460408301846115d7565b949350505050565b84815283602082015260ff8316604082015260806060820152600061178460808301846115d7565b9695505050505050565b8481528351602082015282604082015260806060820152600061178460808301846115d7565b600082198211156117c7576117c761181e565b500190565b6000826117e757634e487b7160e01b81526012600452602481fd5b500490565b6000828210156117fe576117fe61181e565b500390565b60006000198214156118175761181761181e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122099ce918731da9182838a9e50f0c1edd2e9d3b535f9f9df947c7de72dc3b5e7f264736f6c63430008040033";

type HearthStoneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HearthStoneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HearthStone__factory extends ContractFactory {
  constructor(...args: HearthStoneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _shuffle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HearthStone> {
    return super.deploy(_shuffle, overrides || {}) as Promise<HearthStone>;
  }
  override getDeployTransaction(
    _shuffle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_shuffle, overrides || {});
  }
  override attach(address: string): HearthStone {
    return super.attach(address) as HearthStone;
  }
  override connect(signer: Signer): HearthStone__factory {
    return super.connect(signer) as HearthStone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HearthStoneInterface {
    return new utils.Interface(_abi) as HearthStoneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HearthStone {
    return new Contract(address, _abi, signerOrProvider) as HearthStone;
  }
}
